{
	"info": {
		"_postman_id": "ada9ebcf-ab30-4e4c-84b8-cee4af969eee",
		"name": "ITBC_project_Darko_Djekic",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "AccountAuthorized",
			"item": [
				{
					"name": "UserIDRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"userID\", jsonData.userID);\r",
									"pm.collectionVariables.set(\"UserNameReceived\", jsonData.username);\r",
									"\r",
									"pm.test(\"Verify username\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(pm.collectionVariables.get(\"UserNameReceived\"));\r",
									"});\r",
									"pm.test(\"Verify userID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.userID).to.eql(pm.collectionVariables.get(\"userID\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"userName\", pm.variables.replaceIn('{{$randomFirstName}}'))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{userName}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HomeURL}}Account/v1/User",
							"host": [
								"{{HomeURL}}Account"
							],
							"path": [
								"v1",
								"User"
							]
						}
					},
					"response": []
				},
				{
					"name": "GenerateToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set(\"Token\", jsonData.token);\r",
									"pm.collectionVariables.set(\"tokenExpireDate\", jsonData.expires);\r",
									"\r",
									"pm.test(\"Verify Token\", function () {\r",
									"    pm.expect(jsonData.result).to.eql(\"User authorized successfully.\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{UserNameReceived}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HomeURL}}Account/v1/GenerateToken",
							"host": [
								"{{HomeURL}}Account"
							],
							"path": [
								"v1",
								"GenerateToken"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify user Login\", function () {\r",
									"    pm.expect(pm.respJonse.text()).to.include(\"true\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{UserNameReceived}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HomeURL}}Account/v1/Authorized",
							"host": [
								"{{HomeURL}}Account"
							],
							"path": [
								"v1",
								"Authorized"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"pm.test(\"Verify UserGet\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(pm.collectionVariables.get(\"UserNameReceived\"));\r",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HomeURL}}Account/v1/User/{{userID}}",
							"host": [
								"{{HomeURL}}Account"
							],
							"path": [
								"v1",
								"User",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete user \", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
									"});\r",
									"pm.test(\"Response time is less than 400ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{HomeURL}}Account/v1/User/{{userID}}",
							"host": [
								"{{HomeURL}}Account"
							],
							"path": [
								"v1",
								"User",
								"{{userID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BookStore",
			"item": [
				{
					"name": "Books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"var books = jsonData.books;\r",
									"var countBooks = books.length;\r",
									"\r",
									"if (countBooks > 0) {\r",
									"  console.log(`The library has ${countBooks} books.`);\r",
									"} else {\r",
									"  console.log('The library has no books.');\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HomeURL}}BookStore/v1/Books",
							"host": [
								"{{HomeURL}}BookStore"
							],
							"path": [
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostBook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify post a book\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.books[0].isbn).to.eql(pm.globals.get('isbn'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userId\": \"{{userID}}\",\r\n  \"collectionOfIsbns\": [\r\n    {\r\n      \"isbn\": \"{{isbn}}\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HomeURL}}{{Bookspath}}",
							"host": [
								"{{HomeURL}}{{Bookspath}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetBookByISDN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify isbn match\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.isbn).to.eql(pm.globals.get('isbn'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HomeURL}}BookStore/v1/Book?ISBN={{isbn}}",
							"host": [
								"{{HomeURL}}BookStore"
							],
							"path": [
								"v1",
								"Book"
							],
							"query": [
								{
									"key": "ISBN",
									"value": "{{isbn}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ReplaceISBN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Verify new isbn is implemented\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.isbn).to.eql(jsonData.newIsbn);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userId\": \"{{userID}}\",\r\n  \"isbn\": \"{{newIsbn}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HomeURL}}{{Bookspath}}/{{isbn}}",
							"host": [
								"{{HomeURL}}{{Bookspath}}"
							],
							"path": [
								"{{isbn}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteUserBook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete user \", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
									"});\r",
									"pm.test(\"Response time is less than 400ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{HomeURL}}BookStore/v1/Book?UserId={{userID}}",
							"host": [
								"{{HomeURL}}BookStore"
							],
							"path": [
								"v1",
								"Book"
							],
							"query": [
								{
									"key": "UserId",
									"value": "{{userID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteBook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete user \", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
									"});\r",
									"pm.test(\"Response time is less than 400ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"isbn\": \"{{isbn}}\",\r\n  \"userId\": \"{{userID}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HomeURL}}BookStore/v1/Book/",
							"host": [
								"{{HomeURL}}BookStore"
							],
							"path": [
								"v1",
								"Book",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "userName",
			"value": ""
		},
		{
			"key": "Token",
			"value": ""
		},
		{
			"key": "tokenExpireDate",
			"value": ""
		},
		{
			"key": "userID",
			"value": ""
		},
		{
			"key": "UserNameReceived",
			"value": ""
		}
	]
}